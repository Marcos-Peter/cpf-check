!function(r,t){"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?module.exports=t():r.CPF=t()}(this,function(){"use strict";function r(r){return-1!==r.constructor.toString().indexOf("String")}function t(r,t){var n=Math.ceil(t),e=Math.floor(r);return Math.floor(Math.random()*(e-(n+1)))+n}function n(t){if(!r(t))throw new Error("CPF.parse Error\nExpected String but instead got "+(void 0===t?"undefined":d(t)));var n=t.match(/\d{3}(.|-)?\d{3}(.|-)?\d{3}(.|-)?\d{2}/);return null===n?"":n[0]}function e(t){if(!r(t))throw new Error("CPF.strip Error\nExpected String but instead got "+(void 0===t?"undefined":d(t)));return t.replace(/[^\d]/g,"").trim()}function o(t){if(!r(t))throw new Error("CPF.format Error\nExpected String but instead got "+(void 0===t?"undefined":d(t)));var o=/^(\d{3})(\d{3})(\d{3})(\d{2})$/;return e(n(t)).replace(o,"$1.$2.$3-$4")}function i(t){if(!r(t))throw new Error("CPF.format Error\nExpected String but instead got "+(void 0===t?"undefined":d(t)));for(var n=t.split("").map(function(r){return parseInt(r,10)}),e=n.length-1;e>=0;e-=1)if(Number.isNaN(n[e]))throw new Error("CPF.transform Error\nExpected digits only string but instead got "+t);return n}function u(r){if(!Array.isArray(r))throw new Error("CPF.checkSum Error\nExpected digits to be an array but instead got "+(void 0===r?"undefined":d(r)));var t=r.length+1,n=10*r.map(function(r,n){return r*(t-n)}).reduce(function(r,t){return r+t})%11;return n>9?0:n}var d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r},f=function(t){if(!r(t))throw new Error("CPF.validate Error\nExpected CPF to be a string, instead got "+(void 0===t?"undefined":d(t)));var o=i(e(n(t)));if(11!==o.length)return!1;var f=o.slice(9,11),c=u(o.slice(0,9)),a=u(o.slice(0,9).concat([c]));return f[0]===c&&f[1]===a};return f.parse=n,f.strip=e,f.format=o,f.generate=function(){for(var r="",n=0;n<9;n+=1)r=r.concat(t(9,1).toString(10));var e=i(r),d=u(e.slice(0,9)),f=u(e.slice(0,9).concat([d]));return o(""+e.join("")+d+f)},f});
//# sourceMappingURL=cpf.ad8108d7.min.js.map
